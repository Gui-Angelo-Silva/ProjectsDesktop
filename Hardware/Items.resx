<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ALiDHTv+B2LvHDyNqZVFAAAAAElFTkSuQmCC
</value>
  </data>
</root>